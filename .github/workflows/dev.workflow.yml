# Note: Find everywhere that says PG_URL, and "example" for the database, and update that with the
# correct database name you chose

name: Deploy Development
on:
  push:
    branches:
      - development
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: build
        uses: cedrickring/golang-action@1.6.0
        with:
          args: |
            go get github.com/golang/mock/mockgen@v1.4.4;
            make mocks;
            make build_ci;
            make test;
  integration_test:
    runs-on: ubuntu-latest
    container: golang:1.15.6-buster
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: example
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Initialize Database
        uses: cedrickring/golang-action@1.6.0
        env:
          PG_URL: "postgres://postgres:password@postgres:5432/?sslmode=disable"
        with:
          args: make migrator && ./bin/migrator init && ./bin/migrator up
      - name: Integration Test
        uses: cedrickring/golang-action@1.6.0
        env:
          PG_URL: "postgres://postgres:password@postgres:5432/example?sslmode=disable"
        with:
          args: make e2e
  deploy:
    name: deploy
    container: golang:1.15.6-buster
    runs-on: ubuntu-latest
    needs: [ build, integration_test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install Serverless Framework
        run: npm install -g serverless
      - name: Deploy
        run: make deploy_ci
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
  migrate_db:
    runs-on: ubuntu-latest
    container: golang:1.15.6-buster
    needs: [ build, integration_test, deploy ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Migrate
        uses: cedrickring/golang-action@1.6.0
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          DB_SECRET: dev-database-credentials
        with:
          args: make migrator && ./bin/migrator up
